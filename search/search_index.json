{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9996\u9875","text":"\u601d\u7801 (SimaCode) <p>AI\u7f16\u6392\u5de5\u4f5c\u6d41\u6846\u67b6 \u00b7 ReAct \u5de5\u4f5c\u6d41\u7f16\u6392 \u00b7 MCP \u5de5\u5177\u96c6\u6210 \u00b7 CLI / API \u53cc\u6a21\u5f0f</p> \u5f00\u59cb\u4f7f\u7528 GitHub New v0.1 \u9884\u89c8\uff1a\u66f4\u5f3a ReAct \u89c4\u5212\u4e0e MCP \u4f53\u9a8c\uff0c\u67e5\u770b \u5feb\u901f\u5f00\u59cb \u6216 \u8def\u7ebf\u56fe\u3002"},{"location":"#_1","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9\u601d\u7801","text":"<ul> <li>\u667a\u80fd\u5de5\u4f5c\u6d41\u7f16\u6392\uff1a\u7ed3\u5408\"\u601d\u8003 + \u884c\u52a8\"\uff0c\u81ea\u52a8\u89c4\u5212\u5e76\u6267\u884c\u5de5\u4f5c\u6d41\u4efb\u52a1\u3002</li> <li>MCP \u5de5\u5177\u96c6\u6210\uff1a\u7edf\u4e00\u63a5\u5165\u6587\u4ef6/\u7f51\u7edc/\u6570\u636e\u7b49\u5916\u90e8\u5de5\u5177\uff0cAI\u7f16\u6392/\u76f4\u8fde\u7686\u53ef\u3002</li> <li>\u53cc\u6a21\u5f0f\u67b6\u6784\uff1a\u4e2a\u4ebaCLI\u9ad8\u6548\u5de5\u4f5c\u6d41\u6267\u884c\uff0cAPI\u4fbf\u4e8e\u4f01\u4e1a\u5de5\u4f5c\u6d41\u96c6\u6210\u4e0e\u81ea\u52a8\u5316\u3002</li> <li>\u5de5\u7a0b\u5316\u8bbe\u8ba1\uff1a\u7c7b\u578b\u68c0\u67e5\u3001\u683c\u5f0f\u5316\u3001Lint\u3001\u6d4b\u8bd5\u8986\u76d6\u7387\u4e00\u5e94\u4ff1\u5168\u3002</li> </ul>"},{"location":"#_2","title":"\u4e09\u6b65\u4e0a\u624b","text":"<pre><code>poetry install\npoetry run simacode chat --react --interactive\npoetry run simacode serve --reload --debug\n</code></pre>"},{"location":"#_3","title":"\u529f\u80fd\u901f\u89c8","text":"<ul> <li> <p> CLI \u4f53\u9a8c     \u4ea4\u4e92\u4e0e\u6d41\u5f0f\u8f93\u51fa\uff0c\u9002\u5408\u65e5\u5e38\u5f00\u53d1\u4e0e\u5feb\u901f\u9a8c\u8bc1\u3002</p> </li> <li> <p> API \u96c6\u6210     \u57fa\u4e8e FastAPI \u7684\u63a5\u53e3\uff0c\u6613\u96c6\u6210\u3001\u6613\u6269\u5c55\u3002</p> </li> <li> <p> MCP \u5de5\u5177     \u81ea\u52a8\u53d1\u73b0\u4e0e\u6267\u884c\uff0c\u652f\u6301 AI \u8c03\u7528\u4e0e\u624b\u52a8\u8c03\u7528\u3002</p> </li> <li> <p> \u6e05\u6670\u67b6\u6784     \u6838\u5fc3\u5171\u4eab\u3001\u63a5\u53e3\u5206\u5c42\uff0c\u6613\u7ef4\u62a4\u3001\u597d\u6269\u5c55\u3002</p> </li> <li> <p> \u6545\u969c\u6392\u67e5     \u7f51\u7edc\u4ee3\u7406/MCP \u5e38\u89c1\u95ee\u9898\u4e0e\u89e3\u51b3\u65b9\u6848\u3002</p> </li> <li> <p> \u5f02\u6b65\u4efb\u52a1     \u652f\u6301\u5f02\u6b65\u4e0e\u5e76\u53d1\u5904\u7406\uff0c\u63d0\u5347\u541e\u5410\u4e0e\u54cd\u5e94\u901f\u5ea6\u3002</p> </li> <li> <p> \u5185\u5d4c\u5de5\u5177     \u5185\u7f6e\u5e76\u53ef\u6269\u5c55\u591a\u79cd\u5de5\u5177\uff0c\u4fbf\u4e8e\u7ec4\u5408\u8c03\u7528\u4e0e\u7f16\u6392\u3002</p> </li> <li> <p> ReAct \u89c4\u5212     \u4ece\u5bf9\u8bdd\u5230\u6267\u884c\uff0cAI\u7f16\u6392\u5de5\u5177\uff0c\u81ea\u52a8\u5b8c\u6210\u76ee\u6807\u3002</p> </li> </ul> <p>\u672c\u7ad9\u91c7\u7528\u8f7b\u5b9a\u5236\u6837\u5f0f\uff0c\u4fdd\u6301 MkDocs \u7684\u7b80\u6d01\u4e0e\u53ef\u7ef4\u62a4\u6027\uff0c\u540c\u65f6\u5448\u73b0\u66f4\u201c\u4ea7\u54c1\u5316\u201d\u7684\u9996\u5c4f\u4e0e\u529f\u80fd\u5361\u7247\u3002</p>"},{"location":"#_4","title":"\u754c\u9762\u9884\u89c8","text":"CLI \u4ea4\u4e92\u4e0e\u6d41\u5f0f\u8f93\u51fa API \u542f\u52a8\u4e0e\u5065\u5eb7\u68c0\u67e5 MCP \u5de5\u5177\u53d1\u73b0\u4e0e\u6267\u884c"},{"location":"#_5","title":"\u4fe1\u4efb\u4e0e\u6307\u6807","text":""},{"location":"#_6","title":"\u5feb\u901f\u5bf9\u6bd4","text":"\u7ef4\u5ea6 \u601d\u7801 n8n Dify \u5b9a\u4f4d AI\u7f16\u6392\u5de5\u4f5c\u6d41\u6846\u67b6/Agent \u57fa\u5ea7 \u53ef\u89c6\u5316\u81ea\u52a8\u5316\u4e0e\u96c6\u6210\u5e73\u53f0 LLM \u5e94\u7528/Agent \u6784\u5efa\u5e73\u53f0 \u7f16\u6392\u65b9\u5f0f \u76ee\u6807\u2192\u6b65\u9aa4\uff0cAI \u7f16\u6392\u5de5\u4f5c\u6d41 MCP \u5de5\u5177 \u8282\u70b9/\u5de5\u4f5c\u6d41\u62d6\u62fd Flow/Graph + \u7ec4\u4ef6\u3001Agent \u573a\u666f \u4f7f\u7528\u65b9\u5f0f CLI + API\uff08FastAPI\uff09 Web UI + Self-host/Cloud Web \u63a7\u5236\u53f0 + API \u5de5\u5177\u751f\u6001 MCP \u5de5\u5177/\u7cfb\u7edf\u5de5\u5177\uff0c\u53ef\u81ea\u5b9a\u4e49 \u4e0a\u767e\u7b2c\u4e09\u65b9\u8282\u70b9\u96c6\u6210 \u6a21\u578b/\u68c0\u7d22/\u5de5\u5177\u63d2\u4ef6\uff0c\u53ef\u6269\u5c55 \u89e6\u53d1\u4e0e\u81ea\u52a8\u5316 CLI/HTTP \u89e6\u53d1\uff0c\u4efb\u52a1/\u4f1a\u8bdd\u4e0a\u4e0b\u6587 \u89e6\u53d1\u5668/\u5b9a\u65f6/\u4e8b\u4ef6\u9a71\u52a8 \u5de5\u4f5c\u6d41/\u56de\u8c03/\u5b9a\u65f6 \u5178\u578b\u573a\u666f \u5de5\u4f5c\u6d41\u81ea\u52a8\u5316\u3001\u4e1a\u52a1\u6d41\u7a0b\u7f16\u6392\u3001\u53ef\u63a7 Agent \u7cfb\u7edf\u96c6\u6210\u3001ETL\u3001\u901a\u77e5\u3001\u4e1a\u52a1\u6d41\u7a0b LLM \u5e94\u7528\u3001RAG\u3001Agent Studio \u53ef\u6269\u5c55\u6027 Python \u6269\u5c55 + MCP \u670d\u52a1\u5668\u63a5\u5165 \u81ea\u5b9a\u4e49\u8282\u70b9/\u51fd\u6570 \u63d2\u4ef6/\u51fd\u6570\u8c03\u7528/\u5de5\u5177\u63a5\u5165 \u90e8\u7f72 \u672c\u5730 CLI/API \u670d\u52a1 Docker/self-host \u6216\u4e91 Docker/self-host \u6216\u4e91 <p>\u76ee\u6807\u662f\u517c\u987e\"\u63a2\u7d22\uff08AI \u51b3\u7b56\uff09\"\u4e0e\"\u53ef\u63a7\uff08\u4f60\u6765\u9a71\u52a8\uff09\"\uff0c\u65e2\u80fd\u72ec\u7acb\u4f7f\u7528\uff0c\u4e5f\u4fbf\u4e8e\u96c6\u6210\u5230\u73b0\u6709\u7cfb\u7edf\u3002</p>"},{"location":"#_7","title":"\u8054\u7cfb\u6211\u4eec","text":"\ud83d\udcac \u6280\u672f\u4ea4\u6d41 <p>\u5fae\u4fe1\uff1a<code>yhc-startup</code></p> <p>GitHub\uff1aIssues &amp; Discussions</p> \ud83d\udcf1 \u83b7\u5f97\u601d\u7801\u66f4\u65b0 \u5173\u6ce8\u516c\u4f17\u53f7\u83b7\u53d6\u6700\u65b0\u52a8\u6001"},{"location":"architecture/","title":"\u67b6\u6784","text":""},{"location":"architecture/#_2","title":"\u5206\u5c42\u8bbe\u8ba1\uff08\u53cc\u6a21\u5f0f\u5de5\u4f5c\u6d41\u67b6\u6784\uff09","text":"<ul> <li>\u6838\u5fc3\u5de5\u4f5c\u6d41\u670d\u52a1\u5c42\uff1aReAct \u5de5\u4f5c\u6d41\u5f15\u64ce\u3001\u5de5\u4f5c\u6d41\u5de5\u5177\u7cfb\u7edf\u3001AI \u7f16\u6392\u5ba2\u6237\u7aef\u3001\u914d\u7f6e\u4e0e\u4f1a\u8bdd\u3001\u5b89\u5168\u6743\u9650\u3002</li> <li>\u5de5\u4f5c\u6d41\u63a5\u53e3\u5c42\uff1a</li> <li>CLI\uff1a\u57fa\u4e8e Click \u7684\u5de5\u4f5c\u6d41\u547d\u4ee4\u884c\u754c\u9762\uff08<code>src/simacode/cli.py</code>\uff09\u3002</li> <li>API\uff1a\u57fa\u4e8e FastAPI \u7684\u5de5\u4f5c\u6d41\u7f16\u6392\u670d\u52a1\uff08<code>src/simacode/api/</code>\uff09\u3002</li> </ul>"},{"location":"architecture/#_3","title":"\u76ee\u5f55\u6982\u89c8","text":"<pre><code>src/simacode/\n\u251c\u2500\u2500 cli.py              # CLI \u5165\u53e3\n\u251c\u2500\u2500 api/                # FastAPI \u5e94\u7528\u4e0e\u8def\u7531\n\u251c\u2500\u2500 react/              # ReAct \u5de5\u4f5c\u6d41\u5f15\u64ce\n\u251c\u2500\u2500 tools/              # \u5de5\u4f5c\u6d41\u5de5\u5177\u7cfb\u7edf\uff08\u542b MCP \u96c6\u6210\uff09\n\u251c\u2500\u2500 permissions/        # \u6743\u9650\u4e0e\u6821\u9a8c\n\u251c\u2500\u2500 session/            # \u4f1a\u8bdd\u7ba1\u7406\n\u251c\u2500\u2500 services/           # \u670d\u52a1\u5c01\u88c5\n\u2514\u2500\u2500 config.py           # \u914d\u7f6e\u52a0\u8f7d\u4e0e\u6821\u9a8c\n</code></pre>"},{"location":"architecture/#_4","title":"\u8bbe\u8ba1\u8981\u70b9","text":"<ul> <li>\u7edf\u4e00\u5de5\u4f5c\u6d41\u903b\u8f91\uff1aCLI \u4e0e API \u5171\u4eab\u6838\u5fc3\u5de5\u4f5c\u6d41\u7f16\u6392\u80fd\u529b\uff0c\u964d\u4f4e\u91cd\u590d\u5b9e\u73b0\u3002</li> <li>\u53ef\u6269\u5c55\u7684\u5de5\u4f5c\u6d41\u5de5\u5177\u6ce8\u518c\u8868\uff1a\u652f\u6301\u5de5\u5177\u53d1\u73b0\u3001\u547d\u540d\u7a7a\u95f4\u3001\u70ed\u66f4\u65b0\u3002</li> <li>\u5b89\u5168\u4e0e\u9694\u79bb\uff1a\u53d7\u63a7\u7684\u5916\u90e8\u547d\u4ee4\u4e0e\u6587\u4ef6\u8bbf\u95ee\uff0c\u5de5\u4f5c\u6d41\u6267\u884c\u5ba1\u8ba1\u53cb\u597d\u3002</li> </ul>"},{"location":"contributing/","title":"\u8d21\u732e\u6307\u5357\uff08\u7b80\u8981\uff09","text":""},{"location":"contributing/#_2","title":"\u5f00\u53d1\u6d41\u7a0b","text":"<ol> <li>\u5b89\u88c5\u4f9d\u8d56\uff1a<code>poetry install --with dev</code></li> <li>\u4ee3\u7801\u53d8\u66f4\uff1a\u9075\u5faa PEP 8\u3001\u7c7b\u578b\u6ce8\u89e3\u4e0e\u6a21\u5757\u5316\u8bbe\u8ba1\u3002</li> <li>\u6821\u9a8c\u4e0e\u6d4b\u8bd5\uff1a    <pre><code>poetry run black . &amp;&amp; poetry run isort .\npoetry run flake8 src/simacode\npoetry run mypy src/simacode\npoetry run pytest -v\n</code></pre></li> <li>\u63d0\u4ea4\u4fe1\u606f\uff1aConventional Commits\uff08\u5982 <code>feat: ...</code>, <code>fix: ...</code>\uff09\u3002</li> <li>\u53d1\u8d77 PR\uff1a\u63cf\u8ff0\u53d8\u66f4\u3001\u9644\u6d4b\u8bd5/\u622a\u56fe\u3001\u5173\u8054 Issue\u3002</li> </ol>"},{"location":"contributing/#_3","title":"\u6d4b\u8bd5\u89c4\u8303","text":"<ul> <li>\u6846\u67b6\uff1apytest\uff08\u542b <code>pytest-asyncio</code>\uff09\u3002</li> <li>\u76ee\u5f55\uff1a<code>tests/</code>\uff0c\u6587\u4ef6\u547d\u540d <code>test_*.py</code> \u6216 <code>*_test.py</code>\u3002</li> <li>\u8986\u76d6\u7387\uff1a\u5efa\u8bae\u4e3a\u65b0\u589e/\u4fee\u6539\u4ee3\u7801\u63d0\u4f9b\u6d4b\u8bd5\u3002</li> </ul>"},{"location":"examples/","title":"\u793a\u4f8b","text":"CLIMCPAPI <pre><code>poetry run simacode chat --react --interactive\n\n# \u793a\u4f8b\u5bf9\u8bdd\uff1a\n# \u4f60\uff1a\u8bf7\u751f\u6210\u4e00\u4e2a\u8bfb\u53d6 CSV \u5e76\u7edf\u8ba1\u5b57\u6bb5\u5747\u503c\u7684\u811a\u672c\n# \u52a9\u624b\uff1a\u5c06\u81ea\u52a8\u89c4\u5212\u6b65\u9aa4\u4e0e\u5de5\u5177\u6267\u884c\uff0c\u5e76\u8fd4\u56de\u4ee3\u7801\u4e0e\u8fd0\u884c\u5efa\u8bae\n</code></pre> <pre><code># \u521d\u59cb\u5316\u4e0e\u67e5\u770b\u5de5\u5177\npoetry run simacode mcp init\npoetry run simacode mcp list\n\n# \u6267\u884c\u5de5\u5177\npoetry run simacode mcp run file_tools:read_file --param file_path=config.yaml\n</code></pre> <pre><code># \u542f\u52a8\u670d\u52a1\npoetry run simacode serve --host 0.0.0.0 --port 8000\n\n# \u5065\u5eb7\u68c0\u67e5\ncurl http://localhost:8000/health\n\n# Chat \u63a5\u53e3\uff08\u793a\u4f8b\uff09\ncurl -X POST http://localhost:8000/api/v1/chat/ \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"message\": \"\u521b\u5efa\u4e00\u4e2a Python \u6590\u6ce2\u90a3\u5951\u51fd\u6570\"}'\n</code></pre>"},{"location":"features/","title":"\u529f\u80fd","text":""},{"location":"features/#react","title":"ReAct \u667a\u80fd\u5de5\u4f5c\u6d41\u7f16\u6392","text":"<ul> <li>\u4ece\u5bf9\u8bdd\u5230\u6267\u884c\uff0cAI\u7f16\u6392\u5de5\u4f5c\u6d41\u5de5\u5177\uff0c\u81ea\u52a8\u5b8c\u6210\u76ee\u6807\u3002</li> <li>\u7ed3\u5408\u4e0a\u4e0b\u6587\u4f1a\u8bdd\uff0c\u6301\u7eed\u6539\u8fdb\u4e0e\u91cd\u8bd5\u5de5\u4f5c\u6d41\u3002</li> </ul>"},{"location":"features/#_2","title":"\u5f02\u6b65\u4efb\u52a1","text":"<ul> <li>\u57fa\u4e8e async/await \u7684\u975e\u963b\u585e\u6267\u884c\uff0c\u63d0\u5347\u541e\u5410\u4e0e\u54cd\u5e94\u901f\u5ea6\u3002</li> <li>\u652f\u6301\u5e76\u53d1\u8c03\u5ea6\uff08\u6279\u91cf\u8bf7\u6c42/\u5de5\u5177\u8c03\u7528\uff09\uff0c\u5e76\u53ef\u914d\u7f6e\u6700\u5927\u5e76\u53d1\u5ea6\u4e0e\u961f\u5217\u7b56\u7565\u3002</li> <li>\u63d0\u4f9b\u8d85\u65f6\u3001\u53d6\u6d88\u3001\u91cd\u8bd5\u4e0e\u9000\u907f\u7b49\u63a7\u5236\uff0c\u786e\u4fdd\u7a33\u5b9a\u6027\u3002</li> <li>\u517c\u5bb9 CLI \u4e0e API\uff1aCLI \u6d41\u5f0f\u8f93\u51fa\uff0cAPI \u53ef\u5f02\u6b65\u8fd4\u56de\u957f\u4efb\u52a1\u7ed3\u679c\u3002</li> </ul> \u793a\u4f8b\uff1aPython \u5e76\u53d1\u8bf7\u6c42 API\u793a\u4f8b\uff1aShell \u5e76\u53d1(\u8fdb\u7a0b\u7ea7) <pre><code>import asyncio\nimport httpx\n\nAPI_BASE = \"http://localhost:8000/api/v1\"\n\nasync def run_chat(client: httpx.AsyncClient, message: str) -&gt; dict:\n    resp = await client.post(\n        f\"{API_BASE}/chat/\",\n        json={\"message\": message},\n        timeout=60,\n    )\n    resp.raise_for_status()\n    return resp.json()\n\nasync def main():\n    prompts = [\n        \"\u5199\u4e00\u4e2a\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u7684 Python \u51fd\u6570\",\n        \"\u628a\u4e0b\u5217\u5217\u8868\u53bb\u91cd\u5e76\u6392\u5e8f: [3,1,2,3,2]\",\n        \"\u7ed9\u6211\u4e00\u4e2a\u7b80\u5355\u7684 FastAPI \u5065\u5eb7\u68c0\u67e5\u793a\u4f8b\",\n    ]\n    async with httpx.AsyncClient() as client:\n        results = await asyncio.gather(*[run_chat(client, p) for p in prompts])\n    for r in results:\n        print(r)\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre> <pre><code># \u4f9d\u8d56 GNU parallel \u6216 xargs \u5e76\u53d1\u6267\u884c curl \u793a\u4f8b\nexport API=http://localhost:8000/api/v1/chat/\nprintf '%s\\n' \\\n  '\u5199\u4e00\u4e2a\u5feb\u901f\u6392\u5e8f\u7684 Python \u7248\u672c' \\\n  '\u4f7f\u7528 curl \u505a\u4e00\u4e2a POST \u793a\u4f8b' \\\n  'JSON \u4e0e YAML \u7684\u533a\u522b\u662f\u4ec0\u4e48' \\\n| xargs -I{} -P 4 sh -c \\\n  'curl -s -X POST \"$API\" -H \"Content-Type: application/json\" -d \"{\\\"message\\\": \\\"{}\\\"}\"'\n</code></pre>"},{"location":"features/#mcp","title":"MCP \u5de5\u4f5c\u6d41\u5de5\u5177\u96c6\u6210","text":"<ul> <li>\u901a\u8fc7 <code>simacode mcp</code> \u6307\u4ee4\u8fdb\u884c\u5de5\u4f5c\u6d41\u5de5\u5177\u53d1\u73b0/\u6267\u884c\u3002</li> <li>\u652f\u6301 AI \u81ea\u52a8\u7f16\u6392\u8c03\u7528\u4e0e\u7528\u6237\u76f4\u8fde\u8c03\u7528\u4e24\u79cd\u6a21\u5f0f\u3002</li> </ul>"},{"location":"features/#_3","title":"\u5185\u5d4c\u5de5\u5177","text":"<ul> <li>\u5185\u7f6e\u5e38\u7528\u5de5\u5177\uff08\u6587\u4ef6\u3001\u547d\u4ee4\u6267\u884c\u3001HTTP\u3001MCP \u9002\u914d\u5668\u7b49\uff09\uff0c\u53ef\u5373\u7528\u53ef\u6269\u5c55\u3002</li> <li>\u7edf\u4e00\u5de5\u5177\u63a5\u53e3\u4e0e\u6743\u9650\u8fb9\u754c\uff0c\u9632\u6b62\u8d8a\u6743\u8bbf\u95ee\u4e0e\u5371\u9669\u64cd\u4f5c\u3002</li> <li>\u901a\u8fc7\u9879\u76ee\u914d\u7f6e\uff08\u5982 <code>.simacode/config.yaml</code>\uff09\u542f\u7528/\u7981\u7528\u3001\u914d\u7f6e\u51ed\u636e\u6216\u6ce8\u5165\u81ea\u5b9a\u4e49\u5de5\u5177\u3002</li> <li>\u540c\u65f6\u652f\u6301 AI \u81ea\u52a8\u5de5\u4f5c\u6d41\u7f16\u6392\u8c03\u7528\u4e0e\u547d\u4ee4\u884c\u624b\u52a8\u8c03\u7528\uff0c\u4fbf\u4e8e\u5de5\u4f5c\u6d41\u7ec4\u5408\u4e0e\u7f16\u6392\u3002</li> </ul> \u793a\u4f8b\uff1aCLI \u8c03\u7528\u5de5\u5177\u914d\u7f6e\u793a\u4f8b\uff1a\u542f\u7528/\u914d\u7f6e\u5de5\u5177(.simacode/config.yaml)\u793a\u4f8b\uff1a\u81ea\u5b9a\u4e49\u5de5\u5177\uff08\u6700\u5c0f\u5b9e\u73b0\uff0c\u6309\u5b9e\u9645 API \u8c03\u6574\uff09\u793a\u4f8b\uff1a\u4f5c\u4e3a MCP \u670d\u52a1\u5668\u5bfc\u51fa\uff08\u4e0e tools/mcp_* \u4e00\u81f4\u98ce\u683c\uff09\u793a\u4f8b\uff1a\u5728\u914d\u7f6e\u4e2d\u6302\u8f7d tools/mcp_* \u670d\u52a1\u5668\u5e76\u8c03\u7528 <pre><code># \u67e5\u770b\u53ef\u7528\u5de5\u5177\npoetry run simacode mcp list\n\n# \u6267\u884c\u6587\u4ef6\u8bfb\u53d6\u5de5\u5177\npoetry run simacode mcp run file_tools:read_file --param file_path=README.md\n\n# \u6267\u884c HTTP GET \u5de5\u5177\npoetry run simacode mcp run http:get --param url=https://httpbin.org/get\n</code></pre> <pre><code>tools:\n  enabled:\n    - file_tools\n    - shell\n    - http\n  http:\n    timeout: 30s\n    headers:\n      User-Agent: SimaCode-Docs-Demo\n\nmcp:\n  servers:\n    - id: local_files\n      command: python\n      args: [\"-m\", \"my_mcp.local_files\"]\n      env:\n        ROOT: ./data\n</code></pre> <pre><code># my_project/tools/my_tools.py\nfrom collections import Counter\nimport re\nfrom typing import Iterable\n\ndef word_count(text: str, topk: int = 5) -&gt; dict:\n    \"\"\"\u7edf\u8ba1\u603b\u8bcd\u6570\u4e0e Top-K \u8bcd\u9891\u3002\n    \u53c2\u6570:\n      - text: \u5f85\u7edf\u8ba1\u6587\u672c\n      - topk: \u8fd4\u56de\u7684\u9ad8\u9891\u8bcd\u4e2a\u6570\n    \u8fd4\u56de: {\"total\": int, \"top\": list[tuple[str, int]]}\n    \"\"\"\n    words = re.findall(r\"\\w+\", text.lower())\n    cnt = Counter(words)\n    return {\"total\": len(words), \"top\": cnt.most_common(topk)}\n\n# \u4f2a\u4ee3\u7801\uff1a\u6309\u4f60\u7684\u9879\u76ee\u5b9e\u9645\u6ce8\u518c API \u8c03\u6574\n# from simacode.tools import register_tool\n# register_tool(name=\"text:word_count\", func=word_count)\n</code></pre> <pre><code># my_mcp/filesystem_stdio_server.py\n# \u4f9d\u8d56\uff1apip install mcp psutil  \uff08\u6309\u9700\uff09\nimport asyncio\nfrom pathlib import Path\nfrom typing import Any, Dict, List, Optional\nfrom mcp.server import Server\nfrom mcp.server.models import InitializationOptions\nfrom mcp import types\nfrom mcp.server.stdio import stdio_server\n\nclass FilesystemMCPServer:\n    def __init__(self, root: str = \"/tmp\"):\n        self.root = Path(root).resolve()\n        self.server = Server(\"filesystem-server\")\n        self._setup_tools()\n\n    def _setup_tools(self):\n        @self.server.list_tools()\n        async def list_tools(params: Optional[types.PaginatedRequestParams] = None) -&gt; List[types.Tool]:\n            return [\n                types.Tool(\n                    name=\"read_file\",\n                    description=\"Read contents of a file\",\n                    inputSchema={\n                        \"type\": \"object\",\n                        \"properties\": {\"file_path\": {\"type\": \"string\"}},\n                        \"required\": [\"file_path\"],\n                    },\n                )\n            ]\n\n        @self.server.call_tool()\n        async def call_tool(name: str, arguments: Dict[str, Any]) -&gt; List[types.TextContent]:\n            if name == \"read_file\":\n                p = self._validate(arguments[\"file_path\"])\n                content = p.read_text(encoding=\"utf-8\")\n                return [types.TextContent(type=\"text\", text=content)]\n            raise ValueError(f\"Unknown tool: {name}\")\n\n    def _validate(self, path: str) -&gt; Path:\n        p = Path(path)\n        if not p.is_absolute():\n            p = self.root / p\n        p = p.resolve()\n        p.relative_to(self.root)  # \u9632\u8d8a\u754c\n        return p\n\nasync def main():\n    server = FilesystemMCPServer(\"/tmp\")\n    async with stdio_server() as (r, w):\n        init = InitializationOptions(\n            server_name=\"filesystem-server\",\n            server_version=\"1.0.0\",\n            capabilities=types.ServerCapabilities(tools=types.ToolsCapability(), logging={}),\n        )\n        await server.server.run(r, w, init)\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre> <pre><code># .simacode/config.yaml \uff08\u8282\u9009\uff09\nmcp:\n  servers:\n    - id: file_tools\n      command: python\n      args: [\"tools/mcp_filesystem_server.py\", \"--root\", \"/tmp\"]\n    - id: sys_tools\n      command: python\n      args: [\"tools/mcp_system_monitor_stdio_server.py\"]\n</code></pre> <pre><code># \u521d\u59cb\u5316\u5e76\u67e5\u770b\u5de5\u5177\npoetry run simacode mcp init\npoetry run simacode mcp list | sed -n '1,120p'\n\n# \u6587\u4ef6\u5de5\u5177\uff08\u6765\u81ea tools/mcp_filesystem_server.py\uff09\npoetry run simacode mcp run file_tools:read_file --param file_path=/tmp/hello.txt\n\n# \u7cfb\u7edf\u76d1\u63a7\u5de5\u5177\uff08\u6765\u81ea tools/mcp_system_monitor_stdio_server.py\uff09\npoetry run simacode mcp run sys_tools:get_cpu_usage --param interval=0.5\n</code></pre>"},{"location":"features/#_4","title":"\u53cc\u6a21\u5f0f\u5de5\u4f5c\u6d41\u8fd0\u884c","text":"<ul> <li>CLI\uff1a\u9002\u5408\u4e2a\u4eba\u5de5\u4f5c\u6d41\u5f00\u53d1\u4e0e\u5b9e\u9a8c\uff1b\u63d0\u4f9b\u4ea4\u4e92\u548c\u6d41\u5f0f\u8f93\u51fa\u3002</li> <li>API\uff1aFastAPI \u670d\u52a1\uff0c\u4fbf\u4e8e\u4f01\u4e1a\u5de5\u4f5c\u6d41\u96c6\u6210\u4e0e\u81ea\u52a8\u5316\u3002</li> </ul>"},{"location":"features/#_5","title":"\u5de5\u7a0b\u5316\u4e0e\u5b89\u5168","text":"<ul> <li>Black/isort/flake8/mypy \u5168\u5bb6\u6876\uff1bpytest+\u8986\u76d6\u7387\u3002</li> <li>\u6743\u9650\u4e0e\u4f1a\u8bdd\u7ba1\u7406\uff0c\u63a7\u5236\u5916\u90e8\u547d\u4ee4\u4e0e\u6587\u4ef6\u7cfb\u7edf\u8bbf\u95ee\u8303\u56f4\u3002</li> </ul>"},{"location":"progress/","title":"\u5f53\u524d\u8fdb\u5c55\u4e0e\u540e\u7eed\u63a8\u8fdb\u5efa\u8bae","text":""},{"location":"progress/#v0","title":"\u5f53\u524d\u8fdb\u5c55\uff08v0 \u7ad9\u70b9\u96cf\u5f62\uff09","text":"<ul> <li>\u5b8c\u6210\u7f51\u7ad9\u811a\u624b\u67b6\uff08MkDocs Material\uff09\uff0c\u76ee\u5f55\u4f4d\u4e8e <code>website/</code>\u3002</li> <li>\u4fe1\u606f\u67b6\u6784\uff1a\u5df2\u751f\u6210\u9996\u9875\u3001\u5feb\u901f\u5f00\u59cb\u3001\u529f\u80fd\u3001\u793a\u4f8b\u3001\u67b6\u6784\u3001\u6545\u969c\u6392\u67e5\u3001\u8d21\u732e\u3001\u8def\u7ebf\u56fe\u3001\u65b9\u6848\u3002</li> <li>\u81ea\u5b9a\u4e49\u6837\u5f0f\uff1a<code>docs/styles/overrides.css</code>\uff08Hero\u3001CTA\u3001\u5361\u7247\u3001\u753b\u5eca\u3001\u54c1\u724c\u6805\u683c\u3001\u52a8\u753b\uff09\u3002</li> <li>\u9996\u9875\u5f3a\u5316\uff1aHero + CTA\u3001\u529f\u80fd\u5361\u7247\uff08\u542b\u56fe\u6807\uff09\u3001\u201c\u4fe1\u4efb\u4e0e\u6307\u6807\u201d\u5fbd\u7ae0\u533a\u3001\u5bf9\u6bd4\u8868\u3001\u5408\u4f5c\u65b9 Logo \u6805\u683c\u3002</li> <li>\u56fe\u6807\u4e0e\u589e\u5f3a\uff1a\u542f\u7528 <code>pymdownx.emoji</code>\uff08Material \u56fe\u6807\uff09\uff0c\u793a\u4f8b\u9875\u4f7f\u7528 Tab \u89c6\u56fe\uff08CLI/MCP/API\uff09\u3002</li> <li>\u8d44\u6e90\u5360\u4f4d\uff1aLogo/Favicon\u3001CLI/API/MCP \u622a\u56fe\u3001\u54c1\u724c Logo \u5360\u4f4d\u56fe\u3002</li> </ul>"},{"location":"progress/#_2","title":"\u5efa\u8bae\u7684\u4e0b\u4e00\u6b65\uff08\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\uff09","text":"<p>1) \u54c1\u724c\u4e0e\u89c6\u89c9    - \u66ff\u6362\u771f\u5b9e Logo/Favicon\uff1b\u6839\u636e\u54c1\u724c\u8272\u5fae\u8c03 <code>--brand-primary</code> \u4e0e Hero \u6e10\u53d8\u3002    - \u9009\u62e9 2\u20133 \u5f20\u771f\u5b9e\u622a\u56fe\uff08CLI\u3001API\u3001MCP\uff09\u66ff\u6362\u5360\u4f4d\u56fe\u3002 2) \u5185\u5bb9\u5b8c\u5584    - Quickstart \u589e\u52a0\u201c\u5e38\u89c1\u9519\u8bef\u201d\u77ed\u5217\u8868\uff1bExamples \u589e\u8865 1\u20132 \u4e2a\u7aef\u5230\u7aef\u793a\u4f8b\u3002    - Architecture \u914d\u56fe\uff08PNG/SVG\uff09\u66ff\u6362\u76ee\u5f55\u793a\u610f\uff0c\u7a81\u51fa\u53cc\u6a21\u5f0f\u4e0e\u6838\u5fc3\u5171\u4eab\u3002    - Troubleshooting \u589e\u52a0\u66f4\u591a MCP/\u4ee3\u7406\u6848\u4f8b\u4e0e\u65e5\u5fd7\u6392\u67e5\u6307\u5f15\u3002 3) \u6587\u6863/\u591a\u8bed\u8a00    - \u8003\u8651\u82f1\u6587\u955c\u50cf\uff08en/\uff09\u4ee5\u8986\u76d6\u6d77\u5916\u5f00\u53d1\u8005\uff1b\u6216\u5148\u6dfb\u52a0\u82f1\u6587\u9996\u9875\u3002    - \u589e\u8865\u201c\u547d\u4ee4\u53c2\u8003\u201d\u4e0e\u201c\u914d\u7f6e\u53c2\u8003\u201d\u677f\u5757\uff0c\u6307\u5411 <code>simacode</code> CLI \u4e0e <code>.simacode/config.yaml</code>\u3002 4) \u90e8\u7f72\u4e0e SEO    - GitHub Pages \u90e8\u7f72\uff1a\u6dfb\u52a0 Actions \u5de5\u4f5c\u6d41\uff08\u6784\u5efa + \u53d1\u5e03\uff09\u3002    - \u81ea\u5b9a\u4e49\u57df\u540d\u4e0e Open Graph/Twitter \u5361\u7247\uff08\u793e\u5a92\u5206\u4eab\u9884\u89c8\uff09\u3002    - \u53ef\u9009\uff1a\u7ad9\u5185\u641c\u7d22\u4f18\u5316\u3001\u7ad9\u70b9\u5730\u56fe\u3002 5) \u89c2\u6d4b\u4e0e\u53cd\u9988    - \u8f7b\u91cf\u7edf\u8ba1\uff08\u5982 Plausible/Umami\uff09\uff1b    - \u5728\u9996\u9875\u6216\u9875\u811a\u6dfb\u52a0\u53cd\u9988\u5165\u53e3\u4e0e GitHub Issues \u94fe\u63a5\u3002</p>"},{"location":"progress/#_3","title":"\u672c\u5730\u9884\u89c8\u4e0e\u90e8\u7f72","text":"<ul> <li>\u672c\u5730\u9884\u89c8\uff1a</li> <li><code>pip install mkdocs-material pymdown-extensions</code></li> <li><code>cd website &amp;&amp; mkdocs serve</code> \u2192 http://127.0.0.1:8000</li> <li>\u90e8\u7f72\uff08GitHub Pages\uff09\uff1a</li> <li>\u624b\u52a8\uff1a<code>cd website &amp;&amp; mkdocs gh-deploy</code></li> <li>CI\uff1a\u6dfb\u52a0 GitHub Actions \u5de5\u4f5c\u6d41\uff08\u5efa\u8bae\u540e\u7eed\u7531\u6211\u8865\u5145\uff09\u3002</li> </ul>"},{"location":"progress/#_4","title":"\u5907\u6ce8","text":"<ul> <li>\u6240\u6709\u6587\u4ef6\u5df2\u96c6\u4e2d\u5728 <code>website/</code>\uff0c\u4fbf\u4e8e\u72ec\u7acb\u7ef4\u62a4\u4e0e\u90e8\u7f72\u3002</li> <li>\u5982\u9700\u66f4\u8d34\u8fd1 Continue \u7684\u89c6\u89c9\uff0c\u53ef\u7ee7\u7eed\u589e\u5f3a\u9996\u5c4f\u7684\u5bf9\u6bd4\u5ea6\u4e0e\u63d2\u753b\u98ce\u683c\uff08\u4fdd\u6301\u8f7b\u91cf CSS\uff09\u3002</li> </ul>"},{"location":"quickstart/","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"quickstart/#_2","title":"\u5b89\u88c5","text":"<pre><code># \u514b\u9686\u5e76\u8fdb\u5165\u9879\u76ee\ngit clone https://github.com/QUSEIT/simacode.git\ncd simacode\n\n# \u5b89\u88c5\u4f9d\u8d56\uff08\u5f00\u53d1\u73af\u5883\u53ef\u52a0 --with dev\uff09\npoetry install\n</code></pre>"},{"location":"quickstart/#cli","title":"\u7ec8\u7aef\u5de5\u4f5c\u6d41\u4ee3\u7406\uff08CLI\uff09","text":"<pre><code># \u663e\u793a\u5e2e\u52a9\npoetry run simacode --help\n\n# \u521d\u59cb\u5316\u5de5\u4f5c\u6d41\u9879\u76ee\u76ee\u5f55\uff08\u751f\u6210 .simacode/ \u914d\u7f6e\uff09\npoetry run simacode init\n\n# \u4ea4\u4e92\u5de5\u4f5c\u6d41\u4efb\u52a1\u53ca\u5bf9\u8bdd\uff08ReAct \u667a\u80fd\u7f16\u6392\u6a21\u5f0f\uff09\npoetry run simacode chat --react --interactive\n\n# \u5355\u6b21\u5de5\u4f5c\u6d41\u5bf9\u8bdd\npoetry run simacode chat \"\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684Python\u9879\u76ee\uff0c\u5305\u542b\u6590\u6ce2\u90a3\u5951\u51fd\u6570\u3001\u6d4b\u8bd5\u548c\u6587\u6863\"\n</code></pre>"},{"location":"quickstart/#apifastapi-uvicorn","title":"\u5de5\u4f5c\u6d41API\u670d\u52a1\uff08FastAPI + Uvicorn\uff09","text":"<pre><code># \u542f\u52a8\u5f00\u53d1\u670d\u52a1\npoetry run simacode serve --host 0.0.0.0 --port 8000 --reload --debug\n\n# \u5065\u5eb7\u68c0\u67e5\ncurl http://localhost:8000/health\n</code></pre>"},{"location":"quickstart/#_3","title":"\u8d28\u91cf\u4e0e\u6821\u9a8c","text":"<pre><code># \u8fd0\u884c\u6d4b\u8bd5\npoetry run pytest -v\n\n# \u8986\u76d6\u7387\npoetry run pytest --cov=simacode --cov-report=html\n\n# \u4ee3\u7801\u98ce\u683c\u4e0e\u7c7b\u578b\npoetry run black . &amp;&amp; poetry run isort .\npoetry run flake8 src/simacode\npoetry run mypy src/simacode\n</code></pre>"},{"location":"roadmap/","title":"\u8def\u7ebf\u56fe\uff08\u6458\u8981\uff09","text":"<ul> <li>API \u52a0\u5f3a\uff1aREST/WebSocket \u5b8c\u6574\u5316\u3001\u5e76\u53d1\u4f1a\u8bdd\u3001\u540e\u53f0\u4efb\u52a1\u3002</li> <li>\u5de5\u5177\u751f\u6001\uff1a\u4ee3\u7801\u5206\u6790\u3001Git \u96c6\u6210\u3001\u9879\u76ee/\u6d4b\u8bd5\u5de5\u5177\u6269\u5c55\u3002</li> <li>\u591a\u63d0\u4f9b\u5546\uff1aAnthropic/Azure/Google \u7b49\u591a\u6a21\u578b\u63a5\u5165\u4e0e\u5207\u6362\u3002</li> <li>\u5b89\u5168\u751f\u4ea7\uff1a\u6c99\u7bb1\u9694\u79bb\u3001\u8d44\u6e90\u9650\u989d\u3001\u5ba1\u8ba1\u4e0e\u76d1\u63a7\u3002</li> <li>\u591a\u667a\u80fd\u4f53\uff1a\u4e13\u7528 Agent\uff08\u6587\u4ef6/\u4ee3\u7801/\u7cfb\u7edf\uff09\u4e0e\u534f\u4f5c\u534f\u8bae\u3002</li> </ul> <p>\u5b8c\u6574\u8fdb\u5ea6\u89c1\u4ed3\u5e93 README \u7684 Development Roadmap \u90e8\u5206\u3002</p>"},{"location":"troubleshooting/","title":"\u6545\u969c\u6392\u67e5","text":""},{"location":"troubleshooting/#mcp","title":"MCP \u4e0e\u7f51\u7edc\u4ee3\u7406","text":"<p>\u75c7\u72b6\uff1a<code>simacode mcp init</code> WebSocket \u8fde\u63a5\u5931\u8d25\uff0c\u6216\u63d0\u793a\u9700\u8981 <code>python-socks</code>\u3002</p> <p>\u89e3\u51b3\uff1a</p> <pre><code># \u6682\u65f6\u5173\u95ed\u4ee3\u7406\u5e76\u521d\u59cb\u5316\nunset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY\npoetry run simacode mcp init\n\n# \u5982\u9700\u4ee3\u7406\uff0c\u5b89\u88c5\u4f9d\u8d56\u5e76\u52a0\u5165 no_proxy\npip install python-socks\nexport no_proxy=\"localhost,127.0.0.1,*.local\"\n</code></pre>"},{"location":"troubleshooting/#api","title":"API \u542f\u52a8\u5931\u8d25","text":"<ul> <li>\u7aef\u53e3\u5360\u7528\uff1a\u66f4\u6362 <code>--port</code>\u3002</li> <li>\u4f9d\u8d56\u7f3a\u5931\uff1a\u786e\u4fdd <code>poetry install</code> \u5df2\u5b8c\u6210\uff08\u542b <code>uvicorn</code>, <code>fastapi</code>\uff09\u3002</li> </ul>"},{"location":"troubleshooting/#cli","title":"CLI \u65e0\u6cd5\u8fd0\u884c","text":"<ul> <li>\u68c0\u67e5 Python \u7248\u672c\uff083.10+\uff09\u3002</li> <li>\u6267\u884c <code>poetry run simacode --help</code> \u9a8c\u8bc1\u53ef\u7528\u6027\u3002</li> </ul>"},{"location":"website_plan/","title":"\u601d\u7801 (SimaCode) \u5b98\u7f51\u5efa\u8bbe\u65b9\u6848","text":""},{"location":"website_plan/#_1","title":"\u76ee\u6807\u4e0e\u53d7\u4f17","text":"<ul> <li>\u4ee5\u5f00\u53d1\u8005\u4e3a\u6838\u5fc3\uff0c\u6e05\u6670\u4f20\u8fbe\u4ef7\u503c\u4e3b\u5f20\uff1aReAct \u5de5\u4f5c\u6d41\u7f16\u6392 + MCP \u5de5\u5177\u96c6\u6210 + \u53cc\u6a21\u5f0f\uff08CLI \u4e0e API\uff09\u3002</li> <li>\u964d\u4f4e\u4e0a\u624b\u95e8\u69db\uff1a\u4e00\u5c4f\u5b8c\u6210\u5b89\u88c5\u4e0e\u6700\u5c0f\u53ef\u8fd0\u884c\u793a\u4f8b\uff1b\u63d0\u4f9b\u53ef\u590d\u5236\u547d\u4ee4\u4e0e API \u7247\u6bb5\u3002</li> </ul>"},{"location":"website_plan/#_2","title":"\u53ef\u53c2\u8003\u7f51\u7ad9","text":"<ul> <li>LangChain\u3001Microsoft AutoGen\u3001CrewAI\u3001Cursor\u3001Continue\u3001GitHub Copilot\u3001OpenAI Assistants\u3001LangGraph\u3001AutoGPT\u3002</li> <li>\u53ef\u501f\u9274\uff1a\u9996\u5c4f\u6e05\u6670 CTA\u3001\u7ed3\u6784\u5316\u793a\u4f8b\u3001\u67b6\u6784\u56fe\u4e0e\u5bf9\u6bd4/\u53ef\u4fe1\u80cc\u4e66\u3002</li> </ul>"},{"location":"website_plan/#ia","title":"\u4fe1\u606f\u67b6\u6784\uff08IA\uff09","text":"<ul> <li>\u9996\u9875\uff1a\u4e00\u53e5\u8bdd\u4ef7\u503c\u4e3b\u5f20 + \u4e3b\u8981 CTA\uff08\u5f00\u59cb\u4f7f\u7528 / \u67e5\u770b\u793a\u4f8b\uff09\u3002</li> <li>\u5feb\u901f\u5f00\u59cb\uff1a\u5b89\u88c5\u4e0e\u6700\u5c0f\u793a\u4f8b\uff08CLI \u4e0e API \u5404\u4e00\u6bb5\uff09\u3002</li> <li>\u529f\u80fd\uff1aReAct \u5de5\u4f5c\u6d41\u7f16\u6392\u3001\u591a\u667a\u80fd\u4f53/MCP\u3001\u6743\u9650\u4e0e\u4f1a\u8bdd\u7ba1\u7406\u3001\u53cc\u6a21\u5f0f\u8fd0\u884c\u3002</li> <li>\u793a\u4f8b\uff1aCLI \u547d\u4ee4\u7247\u6bb5\u3001API \u8def\u7531\u793a\u4f8b\u3001MCP \u6267\u884c\u7247\u6bb5\uff08\u5747\u53ef\u590d\u5236\uff09\u3002</li> <li>\u67b6\u6784\uff1a\u6838\u5fc3\u5c42\u4e0e\u63a5\u53e3\u5c42\uff08CLI/API\uff09\u5206\u5c42\u56fe\uff1b\u6a21\u5757\u8bf4\u660e\uff08<code>src/simacode/*</code>\uff09\u3002</li> <li>\u6587\u6863\uff1a\u914d\u7f6e\u3001\u547d\u4ee4\u53c2\u8003\u3001MCP \u6545\u969c\u6392\u67e5\uff08\u4ee3\u7406/WS\uff09\u3002</li> <li>\u8d21\u732e\uff1a\u6d4b\u8bd5/\u63d0\u4ea4\u89c4\u8303\u3001PR \u8981\u6c42\u3001Roadmap\u3002</li> <li>\u4e0b\u8f7d/\u90e8\u7f72\uff1aPyPI/\u6e90\u7801\u3001\uff08\u540e\u7eed\uff09Docker\u3002</li> </ul>"},{"location":"website_plan/#_3","title":"\u5185\u5bb9\u8981\u70b9\u4e0e\u793a\u4f8b","text":"<ul> <li>\u5b89\u88c5\u4e0e\u73af\u5883\uff08Poetry\uff09\uff1a<code>poetry install</code>\uff08\u5f00\u53d1\uff1a<code>poetry install --with dev</code>\uff09\u3002</li> <li>CLI\uff1a<code>poetry run simacode chat --react --interactive</code>\uff1b<code>poetry run simacode --help</code>\u3002</li> <li>API\uff1a<code>poetry run simacode serve --reload --debug</code>\uff08FastAPI+Uvicorn\uff09\u3002</li> <li>\u6d4b\u8bd5/\u8d28\u91cf\uff1a<code>poetry run pytest -v</code>\uff0c<code>poetry run black . &amp;&amp; isort . &amp;&amp; flake8 src/simacode</code>\uff0c<code>poetry run mypy src/simacode</code>\u3002</li> <li>MCP\uff1a\u6307\u5411 README \u7684\u7528\u6cd5\u4e0e\u4ee3\u7406\u95ee\u9898\u5904\u7406\uff08<code>no_proxy</code>\uff09\u3002</li> </ul>"},{"location":"website_plan/#_4","title":"\u6280\u672f\u9009\u578b\u4e0e\u76ee\u5f55\u7ed3\u6784","text":"<ul> <li>\u9996\u9009\uff1aMkDocs + Material\uff08\u8f7b\u91cf\u3001\u4e0a\u7ebf\u5feb\u3001\u4e0e\u73b0\u6709 docs \u4e00\u81f4\uff09\u3002</li> <li>\u672c\u5730\u9884\u89c8\uff1a<code>pip install mkdocs-material &amp;&amp; mkdocs serve</code>\u3002</li> <li>\u7ad9\u70b9\u7ed3\u6784\u5efa\u8bae\uff08\u7f51\u7ad9\u4fa7\uff09\uff1a</li> <li><code>website/docs/index.md</code>\uff08\u9996\u9875/\u4ef7\u503c\u4e3b\u5f20\uff09</li> <li><code>website/docs/quickstart.md</code>\uff08\u5feb\u901f\u5f00\u59cb\uff09</li> <li><code>website/docs/features.md</code>\uff08\u529f\u80fd\uff09</li> <li><code>website/docs/examples.md</code>\uff08\u793a\u4f8b\uff1aCLI/API/MCP\uff09</li> <li><code>website/docs/architecture.md</code>\uff08\u67b6\u6784\u4e0e\u76ee\u5f55\uff09</li> <li><code>website/docs/troubleshooting.md</code>\uff08MCP/\u7f51\u7edc\u4ee3\u7406\uff09</li> <li><code>website/docs/contributing.md</code>\uff08\u8d21\u732e\u4e0e\u89c4\u8303\uff09</li> <li><code>website/docs/roadmap.md</code>\uff08\u8def\u7ebf\u56fe\uff09</li> </ul>"},{"location":"website_plan/#_5","title":"\u4e0a\u7ebf\u6b65\u9aa4\uff08\u91cc\u7a0b\u7891\uff09","text":"<p>1) v0 \u8349\u6848\uff1aQuickstart/Features/Examples \u4e09\u9875 + \u9996\u9875 CTA\uff1b 2) v0.1\uff1a\u8865\u5145 Architecture/Contributing/Troubleshooting\uff1b 3) v1\uff1a\u6dfb\u52a0\u5bf9\u6bd4\u4e0e\u6848\u4f8b\u3001\u5b8c\u5584\u56fe\u7247\u4e0e\u67b6\u6784\u56fe\u3001\u542f\u7528\u641c\u7d22\uff1b 4) \u90e8\u7f72\uff1aGitHub Pages \u6216 Vercel\uff08CI\uff1a\u6784\u5efa\u5e76\u53d1\u5e03\uff09\u3002</p>"},{"location":"website_plan/#todo","title":"\u540e\u7eed\u52a8\u4f5c\uff08To\u2011Do\uff09","text":"<ul> <li>\u751f\u6210\u9996\u9875\u4e0e Quickstart \u521d\u7a3f\uff1b</li> <li>\u4ece README \u62bd\u53d6\u793a\u4f8b\u548c\u547d\u4ee4\u7247\u6bb5\uff1b</li> <li>\u7ed8\u5236\u5206\u5c42\u67b6\u6784\u56fe\uff08\u5360\u4f4d\u56fe\u5148\u884c\uff09\u3002</li> </ul>"}]}